{"version":3,"file":"index.js","mappings":"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","sources":["webpack://plugin-og-meta-tags/./src/components/OGImageControl.js","webpack://plugin-og-meta-tags/./src/components/OGPreview.js","webpack://plugin-og-meta-tags/external window [\"wp\",\"blockEditor\"]","webpack://plugin-og-meta-tags/external window [\"wp\",\"components\"]","webpack://plugin-og-meta-tags/external window [\"wp\",\"data\"]","webpack://plugin-og-meta-tags/external window [\"wp\",\"editPost\"]","webpack://plugin-og-meta-tags/external window [\"wp\",\"element\"]","webpack://plugin-og-meta-tags/external window [\"wp\",\"i18n\"]","webpack://plugin-og-meta-tags/external window [\"wp\",\"plugins\"]","webpack://plugin-og-meta-tags/external window \"ReactJSXRuntime\"","webpack://plugin-og-meta-tags/webpack/bootstrap","webpack://plugin-og-meta-tags/webpack/runtime/compat get default export","webpack://plugin-og-meta-tags/webpack/runtime/define property getters","webpack://plugin-og-meta-tags/webpack/runtime/hasOwnProperty shorthand","webpack://plugin-og-meta-tags/webpack/runtime/make namespace object","webpack://plugin-og-meta-tags/./src/index.js"],"sourcesContent":["import { __ } from \"@wordpress/i18n\";\nimport { Button } from \"@wordpress/components\";\nimport { MediaUpload, MediaUploadCheck } from \"@wordpress/block-editor\";\n\nconst OGImageControl = ({\n  imageUrl,\n  postThumbnailUrl,\n  hasPostThumbnail,\n  _ogt_image_id,\n  updateMeta,\n  setImageUrl,\n}) => {\n  return (\n    <div style={{ marginBottom: \"24px\" }}>\n      <label\n        className=\"components-base-control__label\"\n        style={{ display: \"block\", marginBottom: \"8px\" }}\n      >\n        {__(\"OG Image\", \"open-graph-tags\")}\n      </label>\n\n      <p\n        className=\"components-base-control__help\"\n        style={{ marginTop: \"-4px\", marginBottom: \"8px\" }}\n      >\n        {_ogt_image_id\n          ? __(\"Using custom image\", \"open-graph-tags\")\n          : hasPostThumbnail\n          ? __(\"Using featured image (default)\", \"open-graph-tags\")\n          : __(\"No image set\", \"open-graph-tags\")}\n      </p>\n\n      <MediaUploadCheck>\n        <div\n          style={{\n            border: \"1px solid #ccc\",\n            padding: \"16px\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#fff\",\n          }}\n        >\n          {(imageUrl || postThumbnailUrl) && (\n            <div style={{ marginBottom: \"16px\" }}>\n              <img\n                src={imageUrl || postThumbnailUrl}\n                alt=\"\"\n                style={{\n                  maxWidth: \"100%\",\n                  display: \"block\",\n                  marginBottom: \"8px\",\n                }}\n              />\n              {_ogt_image_id && (\n                <Button\n                  onClick={() => {\n                    updateMeta(\"_ogt_image_id\", \"\");\n                    setImageUrl(\"\");\n                  }}\n                  variant=\"link\"\n                  isDestructive\n                  style={{ padding: \"0\" }}\n                >\n                  {__(\"Reset to featured image\", \"open-graph-tags\")}\n                </Button>\n              )}\n            </div>\n          )}\n\n          <div style={{ display: \"flex\", gap: \"8px\" }}>\n            <MediaUpload\n              onSelect={(media) => {\n                updateMeta(\"_ogt_image_id\", media.id);\n                setImageUrl(media.url);\n              }}\n              allowedTypes={[\"image\"]}\n              value={_ogt_image_id}\n              render={({ open }) => (\n                <Button onClick={open} variant=\"secondary\">\n                  {_ogt_image_id\n                    ? __(\"Change Image\", \"open-graph-tags\")\n                    : __(\"Select Custom Image\", \"open-graph-tags\")}\n                </Button>\n              )}\n            />\n          </div>\n        </div>\n      </MediaUploadCheck>\n    </div>\n  );\n};\n\nexport default OGImageControl;\n","import { __ } from \"@wordpress/i18n\";\n\nconst OGPreview = ({\n  currentTitle,\n  currentDescription,\n  currentUrl,\n  currentType,\n  imageUrl,\n  hasPostThumbnail,\n  postThumbnailUrl,\n}) => {\n  return (\n    <div\n      className=\"ogt-preview\"\n      style={{\n        marginTop: \"20px\",\n        padding: \"10px\",\n        backgroundColor: \"#f0f0f0\",\n        borderRadius: \"4px\",\n      }}\n    >\n      <h3 style={{ marginTop: 0 }}>{__(\"Preview\", \"open-graph-tags\")}</h3>\n      <div style={{ fontSize: \"12px\" }}>\n        <p>\n          <strong>og:title:</strong> {currentTitle}\n        </p>\n        <p>\n          <strong>og:description:</strong> {currentDescription}\n        </p>\n        {(imageUrl || hasPostThumbnail) && (\n          <p>\n            <strong>og:image:</strong>\n            <br />\n            <img\n              src={imageUrl || postThumbnailUrl}\n              alt=\"\"\n              style={{ maxWidth: \"100%\", marginTop: \"5px\" }}\n            />\n          </p>\n        )}\n        <p>\n          <strong>og:url:</strong> {currentUrl}\n        </p>\n        <p>\n          <strong>og:type:</strong> {currentType}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default OGPreview;\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"plugins\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerPlugin } from \"@wordpress/plugins\";\nimport { PluginSidebar } from \"@wordpress/edit-post\";\nimport {\n  PanelBody,\n  TextControl,\n  SelectControl,\n  Button,\n  Notice,\n} from \"@wordpress/components\";\nimport { useSelect, useDispatch } from \"@wordpress/data\";\nimport { useState, useEffect } from \"@wordpress/element\";\nimport { __ } from \"@wordpress/i18n\";\nimport OGPreview from \"./components/OGPreview\";\nimport OGImageControl from \"./components/OGImageControl\";\n\nconst OGTSidebar = () => {\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [imageUrl, setImageUrl] = useState(\"\");\n\n  const postId = useSelect((select) =>\n    select(\"core/editor\").getCurrentPostId()\n  );\n  const postTitle = useSelect((select) =>\n    select(\"core/editor\").getEditedPostAttribute(\"title\")\n  );\n  const postExcerpt = useSelect((select) =>\n    select(\"core/editor\").getEditedPostAttribute(\"excerpt\")\n  );\n  const postPermalink = useSelect((select) =>\n    select(\"core/editor\").getPermalink()\n  );\n  const hasPostThumbnail = useSelect((select) =>\n    select(\"core/editor\").getEditedPostAttribute(\"featured_media\")\n  );\n  const postThumbnailUrl = useSelect((select) => {\n    const featuredImageId =\n      select(\"core/editor\").getEditedPostAttribute(\"featured_media\");\n    if (!featuredImageId) return null;\n    const media = select(\"core\").getMedia(featuredImageId);\n    return media?.source_url;\n  });\n\n  const { editPost } = useDispatch(\"core/editor\");\n  const meta = useSelect((select) =>\n    select(\"core/editor\").getEditedPostAttribute(\"meta\")\n  );\n\n  const {\n    _ogt_title = \"\",\n    _ogt_description = \"\",\n    _ogt_image_id = \"\",\n    _ogt_url = \"\",\n    _ogt_type = \"article\",\n  } = meta;\n\n  useEffect(() => {\n    if (_ogt_image_id) {\n      fetch(`/wp-json/wp/v2/media/${_ogt_image_id}`)\n        .then((response) => response.json())\n        .then((data) => setImageUrl(data.source_url));\n    }\n  }, [_ogt_image_id]);\n\n  const validateFields = () => {\n    const newErrors = {};\n\n    if (_ogt_title && _ogt_title.length > 70) {\n      newErrors.title = __(\n        \"Title should not exceed 70 characters\",\n        \"open-graph-tags\"\n      );\n    }\n\n    if (_ogt_description && _ogt_description.length > 160) {\n      newErrors.description = __(\n        \"Description should not exceed 160 characters\",\n        \"open-graph-tags\"\n      );\n    }\n\n    if (_ogt_url && !isValidUrl(_ogt_url)) {\n      newErrors.url = __(\"Please enter a valid URL\", \"open-graph-tags\");\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const isValidUrl = (string) => {\n    try {\n      new URL(string);\n      return true;\n    } catch (_) {\n      return false;\n    }\n  };\n\n  const updateMeta = (key, value) => {\n    editPost({ meta: { ...meta, [key]: value } });\n  };\n\n  const ogTypes = [\n    { label: __(\"Article\", \"open-graph-tags\"), value: \"article\" },\n    { label: __(\"Website\", \"open-graph-tags\"), value: \"website\" },\n    { label: __(\"Profile\", \"open-graph-tags\"), value: \"profile\" },\n    { label: __(\"Book\", \"open-graph-tags\"), value: \"book\" },\n    { label: __(\"Product\", \"open-graph-tags\"), value: \"product\" },\n  ];\n\n  return (\n    <PluginSidebar\n      name=\"ogt-sidebar\"\n      title={__(\"Open Graph Tags\", \"open-graph-tags\")}\n    >\n      <PanelBody>\n        {showSuccess && (\n          <Notice\n            status=\"success\"\n            isDismissible={true}\n            onDismiss={() => setShowSuccess(false)}\n          >\n            {__(\"Open Graph tags updated successfully!\", \"open-graph-tags\")}\n          </Notice>\n        )}\n\n        <OGPreview\n          currentTitle={_ogt_title || postTitle}\n          currentDescription={_ogt_description || postExcerpt}\n          currentUrl={_ogt_url || postPermalink}\n          currentType={_ogt_type}\n          imageUrl={imageUrl}\n          hasPostThumbnail={hasPostThumbnail}\n          postThumbnailUrl={postThumbnailUrl}\n        />\n\n        <TextControl\n          label={__(\"OG Title\", \"open-graph-tags\")}\n          value={_ogt_title}\n          onChange={(value) => updateMeta(\"_ogt_title\", value)}\n          placeholder={`Default: ${postTitle}`}\n          help={errors.title}\n          className={errors.title ? \"has-error\" : \"\"}\n        />\n\n        <TextControl\n          label={__(\"OG Description\", \"open-graph-tags\")}\n          value={_ogt_description}\n          onChange={(value) => updateMeta(\"_ogt_description\", value)}\n          placeholder={`Default: ${postExcerpt}`}\n          help={errors.description}\n          className={errors.description ? \"has-error\" : \"\"}\n        />\n\n        <OGImageControl\n          imageUrl={imageUrl}\n          postThumbnailUrl={postThumbnailUrl}\n          hasPostThumbnail={hasPostThumbnail}\n          _ogt_image_id={_ogt_image_id}\n          updateMeta={updateMeta}\n          setImageUrl={setImageUrl}\n        />\n\n        <TextControl\n          label={__(\"OG URL\", \"open-graph-tags\")}\n          value={_ogt_url}\n          onChange={(value) => updateMeta(\"_ogt_url\", value)}\n          placeholder={`Default: ${postPermalink}`}\n          help={errors.url}\n          className={errors.url ? \"has-error\" : \"\"}\n        />\n\n        <SelectControl\n          label={__(\"OG Type\", \"open-graph-tags\")}\n          value={_ogt_type}\n          options={ogTypes}\n          onChange={(value) => updateMeta(\"_ogt_type\", value)}\n        />\n\n        <Button\n          variant=\"primary\"\n          onClick={() => {\n            if (validateFields()) {\n              setShowSuccess(true);\n            }\n          }}\n        >\n          {__(\"Save Open Graph Tags\", \"open-graph-tags\")}\n        </Button>\n      </PanelBody>\n    </PluginSidebar>\n  );\n};\n\nregisterPlugin(\"ogt-sidebar\", {\n  render: OGTSidebar,\n  icon: \"share\",\n});\n"],"names":["__","Button","MediaUpload","MediaUploadCheck","jsx","_jsx","jsxs","_jsxs","OGImageControl","imageUrl","postThumbnailUrl","hasPostThumbnail","_ogt_image_id","updateMeta","setImageUrl","style","marginBottom","children","className","display","marginTop","border","padding","borderRadius","backgroundColor","src","alt","maxWidth","onClick","variant","isDestructive","gap","onSelect","media","id","url","allowedTypes","value","render","open","OGPreview","currentTitle","currentDescription","currentUrl","currentType","fontSize","registerPlugin","PluginSidebar","PanelBody","TextControl","SelectControl","Notice","useSelect","useDispatch","useState","useEffect","OGTSidebar","showSuccess","setShowSuccess","errors","setErrors","postId","select","getCurrentPostId","postTitle","getEditedPostAttribute","postExcerpt","postPermalink","getPermalink","featuredImageId","getMedia","source_url","editPost","meta","_ogt_title","_ogt_description","_ogt_url","_ogt_type","fetch","then","response","json","data","validateFields","newErrors","length","title","description","isValidUrl","Object","keys","string","URL","_","key","ogTypes","label","name","status","isDismissible","onDismiss","onChange","placeholder","help","options","icon"],"sourceRoot":""}